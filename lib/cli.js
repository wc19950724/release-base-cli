'use strict';

var I = require('fs');
var Q = require('path');
var $ = require('prompts');
var N = require('semver');
var child_process = require('child_process');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

function _interopNamespace(e) {
	if (e && e.__esModule) return e;
	var n = Object.create(null);
	if (e) {
		Object.keys(e).forEach(function (k) {
			if (k !== 'default') {
				var d = Object.getOwnPropertyDescriptor(e, k);
				Object.defineProperty(n, k, d.get ? d : {
					enumerable: true,
					get: function () { return e[k]; }
				});
			}
		});
	}
	n.default = e;
	return Object.freeze(n);
}

var I__default = /*#__PURE__*/_interopDefault(I);
var Q__default = /*#__PURE__*/_interopDefault(Q);
var $__default = /*#__PURE__*/_interopDefault($);
var N__namespace = /*#__PURE__*/_interopNamespace(N);

var ut=Object.create;var G=Object.defineProperty;var ft=Object.getOwnPropertyDescriptor;var xt=Object.getOwnPropertyNames;var yt=Object.getPrototypeOf,dt=Object.prototype.hasOwnProperty;var ht=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,r)=>(typeof require<"u"?require:e)[r]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var B=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),bt=(t,e)=>{for(var r in e)G(t,r,{get:e[r],enumerable:!0});},wt=(t,e,r,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of xt(e))!dt.call(t,n)&&n!==r&&G(t,n,{get:()=>e[n],enumerable:!(s=ft(e,n))||s.enumerable});return t};var C=(t,e,r)=>(r=t!=null?ut(yt(t)):{},wt(e||!t||!t.__esModule?G(r,"default",{value:t,enumerable:!0}):r,t));var V=B((Dt,D)=>{var T=Symbol("arg flag"),p=class extends Error{constructor(e,r){super(e),this.name="ArgError",this.code=r,Object.setPrototypeOf(this,p.prototype);}};function v(t,{argv:e=process.argv.slice(2),permissive:r=!1,stopAtPositional:s=!1}={}){if(!t)throw new p("argument specification object is required","ARG_CONFIG_NO_SPEC");let n={_:[]},a={},w={};for(let o of Object.keys(t)){if(!o)throw new p("argument key cannot be an empty string","ARG_CONFIG_EMPTY_KEY");if(o[0]!=="-")throw new p(`argument key must start with '-' but found: '${o}'`,"ARG_CONFIG_NONOPT_KEY");if(o.length===1)throw new p(`argument key must have a name; singular '-' keys are not allowed: ${o}`,"ARG_CONFIG_NONAME_KEY");if(typeof t[o]=="string"){a[o]=t[o];continue}let g=t[o],l=!1;if(Array.isArray(g)&&g.length===1&&typeof g[0]=="function"){let[h]=g;g=(y,S,u=[])=>(u.push(h(y,S,u[u.length-1])),u),l=h===Boolean||h[T]===!0;}else if(typeof g=="function")l=g===Boolean||g[T]===!0;else throw new p(`type missing or not a function or valid array type: ${o}`,"ARG_CONFIG_VAD_TYPE");if(o[1]!=="-"&&o.length>2)throw new p(`short argument keys (with a single hyphen) must have only one character: ${o}`,"ARG_CONFIG_SHORTOPT_TOOLONG");w[o]=[g,l];}for(let o=0,g=e.length;o<g;o++){let l=e[o];if(s&&n._.length>0){n._=n._.concat(e.slice(o));break}if(l==="--"){n._=n._.concat(e.slice(o+1));break}if(l.length>1&&l[0]==="-"){let h=l[1]==="-"||l.length===2?[l]:l.slice(1).split("").map(y=>`-${y}`);for(let y=0;y<h.length;y++){let S=h[y],[u,q]=S[1]==="-"?S.split(/=(.*)/,2):[S,void 0],c=u;for(;c in a;)c=a[c];if(!(c in w))if(r){n._.push(S);continue}else throw new p(`unknown or unexpected option: ${u}`,"ARG_UNKNOWN_OPTION");let[k,F]=w[c];if(!F&&y+1<h.length)throw new p(`option requires argument (but was followed by another short argument): ${u}`,"ARG_MISSING_REQUIRED_SHORTARG");if(F)n[c]=k(!0,c,n[c]);else if(q===void 0){if(e.length<o+2||e[o+1].length>1&&e[o+1][0]==="-"&&!(e[o+1].match(/^-?\d*(\.(?=\d))?\d*$/)&&(k===Number||typeof BigInt<"u"&&k===BigInt))){let gt=u===c?"":` (alias for ${c})`;throw new p(`option requires argument: ${u}${gt}`,"ARG_MISSING_REQUIRED_LONGARG")}n[c]=k(e[o+1],c,n[c]),++o;}else n[c]=k(q,c,n[c]);}}else n._.push(l);}return n}v.flag=t=>(t[T]=!0,t);v.COUNT=v.flag((t,e,r)=>(r||0)+1);v.ArgError=p;D.exports=v;});var A=B((Yt,P)=>{var $t=ht("tty"),_t=!("NO_COLOR"in process.env||process.argv.includes("--no-color"))&&("FORCE_COLOR"in process.env||process.argv.includes("--color")||process.platform==="win32"||$t.isatty(1)&&process.env.TERM!=="dumb"||"CI"in process.env),i=(t,e,r=t)=>s=>{let n=""+s,a=n.indexOf(e,t.length);return ~a?t+K(n,e,r,a)+e:t+n+e},K=(t,e,r,s)=>{let n=t.substring(0,s)+r,a=t.substring(s+e.length),w=a.indexOf(e);return ~w?n+K(a,e,r,w):n+a},L=(t=_t)=>({isColorSupported:t,reset:t?e=>`\x1B[0m${e}\x1B[0m`:String,bold:t?i("\x1B[1m","\x1B[22m","\x1B[22m\x1B[1m"):String,dim:t?i("\x1B[2m","\x1B[22m","\x1B[22m\x1B[2m"):String,italic:t?i("\x1B[3m","\x1B[23m"):String,underline:t?i("\x1B[4m","\x1B[24m"):String,inverse:t?i("\x1B[7m","\x1B[27m"):String,hidden:t?i("\x1B[8m","\x1B[28m"):String,strikethrough:t?i("\x1B[9m","\x1B[29m"):String,black:t?i("\x1B[30m","\x1B[39m"):String,red:t?i("\x1B[31m","\x1B[39m"):String,green:t?i("\x1B[32m","\x1B[39m"):String,yellow:t?i("\x1B[33m","\x1B[39m"):String,blue:t?i("\x1B[34m","\x1B[39m"):String,magenta:t?i("\x1B[35m","\x1B[39m"):String,cyan:t?i("\x1B[36m","\x1B[39m"):String,white:t?i("\x1B[37m","\x1B[39m"):String,gray:t?i("\x1B[90m","\x1B[39m"):String,bgBlack:t?i("\x1B[40m","\x1B[49m"):String,bgRed:t?i("\x1B[41m","\x1B[49m"):String,bgGreen:t?i("\x1B[42m","\x1B[49m"):String,bgYellow:t?i("\x1B[43m","\x1B[49m"):String,bgBlue:t?i("\x1B[44m","\x1B[49m"):String,bgMagenta:t?i("\x1B[45m","\x1B[49m"):String,bgCyan:t?i("\x1B[46m","\x1B[49m"):String,bgWhite:t?i("\x1B[47m","\x1B[49m"):String});P.exports=L();P.exports.createColors=L;});var lt=C(V());var kt=t=>{let e=Q__default.default.resolve(process.cwd(),"package.json"),s=JSON.parse(I__default.default.readFileSync(e,"utf-8")).version;return n=>N__namespace.inc(s,n,t||d.preid)||s},vt=()=>{let{preid:t}=x(),e={},r=kt(t),s=["major","minor","patch","premajor","preminor","prepatch","prerelease"];for(let n of s)e[n]=r(n);return e},J=async t=>{let e=vt(),r=await $__default.default([{type:"autocomplete",name:"release",message:`
Select release type`,initial:"patch",choices:[...Object.keys(e).map(s=>({value:s,title:`${s.padStart(10," ")} (${e[s]})`})),{value:"custom",title:"custom"}]},{type:s=>s==="custom"?"text":null,name:"custom",message:"Enter the new version number:",initial:t,validate:s=>N__namespace.valid(s)?!0:"That's not a valid version number"}]);return r.release==="custom"?r.custom:e[r.release]},M=async t=>{let{quiet:e}=x();if(e)return !0;let{yes:r}=await $__default.default({type:"confirm",name:"yes",message:`Releasing v${t}. Confirm?`});return r},H=async()=>{let{quiet:t}=x();if(t)return !0;let{yes:e}=await $__default.default({type:"confirm",name:"yes",message:"Publish to Git?"});return e},U=async t=>{let{quiet:e}=x();if(e)return !0;let{yes:r}=await $__default.default({type:"confirm",name:"yes",message:`Generate & Publish Tag: v${t}?`});return r},Y=async t=>{let{result:e}=await $__default.default({type:"list",name:"result",message:"Select cmd type",choices:t.map(r=>({value:r,title:r}))});return e};var E=C(A());var R={"--help":Boolean,"--version":Boolean,"--preid":String,"--commit":String,"--quiet":Boolean,"--test":Boolean,"-h":"--help","-v":"--version","-p":"--preid","-c":"--commit","-q":"--quiet","-t":"--test"},W=t=>{let e={};for(let r in t){let s=t[r];switch(r){case"--preid":e.preid=s;break;case"--commit":e.commit=s;break;case"--quiet":e.quiet=s;break;case"--test":e.test=s;break;}}return e},Nt=t=>{let e="";switch(t){case"-h":e="cli help";break;case"-v":e="package version";break;case"-p":e="version prefix".padEnd(_)+`default '${d.preid}'`;break;case"-c":e="commit message".padEnd(_)+`default '${d.commit}'`;break;case"-q":e="quiet release".padEnd(_)+`default ${d.quiet}`;break;case"-t":e="test release".padEnd(_)+`default ${d.quiet}`;break;}return e},z=()=>{let t=new Map;for(let r in R){let s=R[r];R[s]?(t.set(`${r}, ${s}`,r),t.delete(r),t.delete(`${s}`)):t.set(r,r);}let e=Z(Object.fromEntries(t));for(let[r,s]of t)m.warn(`${e(r)}: ${E.default.bold(Nt(s))}`);m.log(`
`);},X=()=>{let t=Q__default.default.resolve(Q__default.default.dirname(__dirname),"..","package.json"),e=JSON.parse(I__default.default.readFileSync(t,"utf-8"));m.success(E.default.bold(e.version));};var d={preid:"beta",commit:"release: v",quiet:!1,test:!1},tt=d,et=async t=>{Object.assign(tt,t);},x=()=>tt,_=16;var m={};bt(m,{default:()=>Gt,error:()=>rt,gray:()=>at,info:()=>nt,log:()=>it,success:()=>ot,warn:()=>st});var O=C(A()),rt=t=>{console.log(O.default.red(t));},st=t=>{console.log(O.default.yellow(t));},nt=t=>{console.log(O.default.blue(t));},ot=t=>{console.log(O.default.green(t));},it=t=>{console.log(t);},at=t=>{console.log(O.default.gray(t));},Gt={error:rt,warn:st,info:nt,success:ot,log:it,gray:at};var f=async(t,e,r)=>{let{test:s,quiet:n}=x();if(s){m.warn(`[test run] ${t} ${e.join(" ")}  ${r?JSON.stringify(r):""}`);return}try{let a=child_process.execSync(`${t} ${e.join(" ")}`,{stdio:n?"ignore":"inherit",...r,encoding:"utf-8"});return a&&r?.stdio!=="pipe"&&m.log(a),a}catch(a){return Promise.reject(a)}},Tt=async()=>{let t=[];return I__default.default.existsSync("package-lock.json")?t.push("npm"):I__default.default.existsSync("yarn.lock")?t.push("yarn"):I__default.default.existsSync("pnpm-lock.yaml")&&t.push("pnpm"),t},ct=async()=>{let t="npm",e=await Tt();return e.length===1?t=e[0]:e.length>1&&(t=await Y(e)),t},b=t=>m.success(`
${t}`);var Z=t=>{let e=Object.keys(t).reduce((r,s)=>s.length>r?s.length:r,0);return (r,s=" ")=>r.padEnd(e,s)};var Pt=async()=>{let t=await At();t&&(await Et(t),await It(),await jt(t));},At=async()=>{let t=Q__default.default.resolve(process.cwd(),"package.json"),r=JSON.parse(I__default.default.readFileSync(t,"utf-8")).version,s=await J(r);return await M(s)&&s},Et=async t=>{b("Updating package versions...");let e=Q__default.default.resolve(process.cwd(),"package.json"),r=JSON.parse(I__default.default.readFileSync(e,"utf-8"));r.version=t,I__default.default.writeFileSync(e,JSON.stringify(r,null,2)+`
`),m.log(`Package version updated: ${t}`);},It=async()=>{b("Updating lockfile...");let t=await ct();try{await f(t,["install","--prefer-offline"]);}catch{await f(t,["install"]);}b("Rebuilding..."),await f(t,["build"]);},jt=async t=>{let{commit:e}=x();if(b("Pushing to GitHub..."),await f("git",["diff"],{stdio:"pipe"})&&(b("Committing changes..."),await f("git",["add","-A"]),await f("git",["commit","-m",`"${e}${t}"`])),await H()&&(await f("git",["push"]),b("Generate & Publish Tag..."),await U(t))){try{await f("git",["tag",`v${t}`]);}catch(a){m.error(a.stack);}await f("git",["push","origin",`refs/tags/v${t}`]);}},qt=async t=>{await et(t),await Pt();},pt=qt;var Ft=async()=>{let t=(0, lt.default)(R,{permissive:!0});if(t["--help"])z();else if(t["--version"])X();else {let e=W(t);await pt(e);}};Ft().catch(t=>{m.error(`${t.name}: ${t.message}`);}).finally(()=>{process.exit(0);});
