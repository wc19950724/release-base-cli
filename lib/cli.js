'use strict';

var cac = require('cac');
var d = require('fs');
var E = require('path');
var u = require('prompts');
var x = require('semver');
var child_process = require('child_process');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

function _interopNamespace(e) {
	if (e && e.__esModule) return e;
	var n = Object.create(null);
	if (e) {
		Object.keys(e).forEach(function (k) {
			if (k !== 'default') {
				var d = Object.getOwnPropertyDescriptor(e, k);
				Object.defineProperty(n, k, d.get ? d : {
					enumerable: true,
					get: function () { return e[k]; }
				});
			}
		});
	}
	n.default = e;
	return Object.freeze(n);
}

var d__default = /*#__PURE__*/_interopDefault(d);
var E__default = /*#__PURE__*/_interopDefault(E);
var u__default = /*#__PURE__*/_interopDefault(u);
var x__namespace = /*#__PURE__*/_interopNamespace(x);

var B=Object.create;var f=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var U=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var H=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,s)=>(typeof require<"u"?require:e)[s]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var W=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),Y=(t,e)=>{for(var s in e)f(t,s,{get:e[s],enumerable:!0});},z=(t,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of L(e))!_.call(t,o)&&o!==s&&f(t,o,{get:()=>e[o],enumerable:!(r=A(e,o))||r.enumerable});return t};var K=(t,e,s)=>(s=t!=null?B(U(t)):{},z(e||!t||!t.__esModule?f(s,"default",{value:t,enumerable:!0}):s,t));var q=W((kt,b)=>{var st=H("tty"),rt=!("NO_COLOR"in process.env||process.argv.includes("--no-color"))&&("FORCE_COLOR"in process.env||process.argv.includes("--color")||process.platform==="win32"||st.isatty(1)&&process.env.TERM!=="dumb"||"CI"in process.env),i=(t,e,s=t)=>r=>{let o=""+r,n=o.indexOf(e,t.length);return ~n?t+R(o,e,s,n)+e:t+o+e},R=(t,e,s,r)=>{let o=t.substring(0,r)+s,n=t.substring(r+e.length),w=n.indexOf(e);return ~w?o+R(n,e,s,w):o+n},T=(t=rt)=>({isColorSupported:t,reset:t?e=>`\x1B[0m${e}\x1B[0m`:String,bold:t?i("\x1B[1m","\x1B[22m","\x1B[22m\x1B[1m"):String,dim:t?i("\x1B[2m","\x1B[22m","\x1B[22m\x1B[2m"):String,italic:t?i("\x1B[3m","\x1B[23m"):String,underline:t?i("\x1B[4m","\x1B[24m"):String,inverse:t?i("\x1B[7m","\x1B[27m"):String,hidden:t?i("\x1B[8m","\x1B[28m"):String,strikethrough:t?i("\x1B[9m","\x1B[29m"):String,black:t?i("\x1B[30m","\x1B[39m"):String,red:t?i("\x1B[31m","\x1B[39m"):String,green:t?i("\x1B[32m","\x1B[39m"):String,yellow:t?i("\x1B[33m","\x1B[39m"):String,blue:t?i("\x1B[34m","\x1B[39m"):String,magenta:t?i("\x1B[35m","\x1B[39m"):String,cyan:t?i("\x1B[36m","\x1B[39m"):String,white:t?i("\x1B[37m","\x1B[39m"):String,gray:t?i("\x1B[90m","\x1B[39m"):String,bgBlack:t?i("\x1B[40m","\x1B[49m"):String,bgRed:t?i("\x1B[41m","\x1B[49m"):String,bgGreen:t?i("\x1B[42m","\x1B[49m"):String,bgYellow:t?i("\x1B[43m","\x1B[49m"):String,bgBlue:t?i("\x1B[44m","\x1B[49m"):String,bgMagenta:t?i("\x1B[45m","\x1B[49m"):String,bgCyan:t?i("\x1B[46m","\x1B[49m"):String,bgWhite:t?i("\x1B[47m","\x1B[49m"):String});b.exports=T();b.exports.createColors=T;});var S="1.0.2";var tt=t=>{let e=E__default.default.resolve(process.cwd(),"package.json"),r=JSON.parse(d__default.default.readFileSync(e,"utf-8")).version;return o=>x__namespace.inc(r,o,t||a.preid)||r},et=()=>{let{preid:t}=p(),e={},s=tt(t),r=["major","minor","patch","premajor","preminor","prepatch","prerelease"];for(let o of r)e[o]=s(o);return e},v=async t=>{let e=et(),s=await u__default.default([{type:"autocomplete",name:"release",message:`
Select release type`,initial:"patch",choices:[...Object.keys(e).map(r=>({value:r,title:`${r.padStart(10," ")} (${e[r]})`})),{value:"custom",title:"custom"}]},{type:r=>r==="custom"?"text":null,name:"custom",message:"Enter the new version number:",initial:t,validate:r=>x__namespace.valid(r)?!0:"That's not a valid version number"}]);return s.release==="custom"?s.custom:e[s.release]},k=async t=>{let{quiet:e}=p();if(e)return !0;let{yes:s}=await u__default.default({type:"confirm",name:"yes",message:`Releasing v${t}. Confirm?`,initial:!0});return s},O=async()=>{let{quiet:t}=p();if(t)return !0;let{yes:e}=await u__default.default({type:"confirm",name:"yes",message:"Publish to Git?",initial:!0});return e},j=async t=>{let{quiet:e}=p();if(e)return !0;let{yes:s}=await u__default.default({type:"confirm",name:"yes",message:`Generate & Publish Tag: v${t}?`,initial:!0});return s},$=async t=>{let{result:e}=await u__default.default({type:"list",name:"result",message:"Select cmd type",choices:t.map(s=>({value:s,title:s}))});return e};var y="[v]",a={preid:"beta",commit:`release: v${y}`,quiet:!1,test:!1},C=a,P=async t=>{Object.assign(C,t);},p=()=>C;var c={};Y(c,{default:()=>it,error:()=>G,gray:()=>V,info:()=>F,log:()=>J,success:()=>I,warn:()=>N});var g=K(q()),G=t=>{console.log(g.default.red(t));},N=t=>{console.log(g.default.yellow(t));},F=t=>{console.log(g.default.blue(t));},I=t=>{console.log(g.default.green(t));},J=t=>{console.log(t);},V=t=>{console.log(g.default.gray(t));},it={error:G,warn:N,info:F,success:I,log:J,gray:V};var m=async(t,e,s)=>{let{test:r,quiet:o}=p();if(r){c.warn(`[test run] ${t} ${e.join(" ")}  ${s?JSON.stringify(s):""}`);return}try{let n=child_process.execSync(`${t} ${e.join(" ")}`,{stdio:o?"ignore":"inherit",...s,encoding:"utf-8"});return n&&s?.stdio!=="pipe"&&c.log(n),n}catch(n){return Promise.reject(n)}},nt=async()=>{let t=[];return d__default.default.existsSync("package-lock.json")?t.push("npm"):d__default.default.existsSync("yarn.lock")?t.push("yarn"):d__default.default.existsSync("pnpm-lock.yaml")&&t.push("pnpm"),t},D=async()=>{let t="npm",e=await nt();return e.length===1?t=e[0]:e.length>1&&(t=await $(e)),t},l=t=>c.success(`
${t}`);var ct=async()=>{let t=await at();t&&(await mt(t),await pt(),await lt(t));},at=async()=>{let t=E__default.default.resolve(process.cwd(),"package.json"),s=JSON.parse(d__default.default.readFileSync(t,"utf-8")).version,r=await v(s);return await k(r)&&r},mt=async t=>{l("Updating package versions...");let e=E__default.default.resolve(process.cwd(),"package.json"),s=JSON.parse(d__default.default.readFileSync(e,"utf-8"));s.version=t,d__default.default.writeFileSync(e,JSON.stringify(s,null,2)+`
`),c.log(`Package version updated: ${t}`);},pt=async()=>{l("Updating lockfile...");let t=await D();try{await m(t,["install","--prefer-offline"]);}catch{await m(t,["install"]);}l("Rebuilding..."),await m(t,["build"]);},lt=async t=>{let{commit:e}=p();if(l("Pushing to GitHub..."),await m("git",["diff"],{stdio:"pipe"})&&(l("Committing changes..."),await m("git",["add","-A"]),await m("git",["commit","-m",`"${e.replace(y,t)}"`])),await O()&&(await m("git",["push"]),l("Generate & Publish Tag..."),await j(t))){try{await m("git",["tag",`v${t}`]);}catch(n){c.error(n.stack);}await m("git",["push","origin",`refs/tags/v${t}`]);}},gt=async t=>{await P(t),await ct();},M=gt;var xt=async()=>{let t=cac.cac("release-cli");t.command("").option("-p, --preid <preid>","version prefix",{default:a.preid}).option("-c, --commit <message>","commit message",{default:a.commit}).option("-q, --quiet","quiet release",{default:a.quiet}).option("-t, --test","test release",{default:a.test}).example(`release-cli -p ${a.preid} -c '${a.commit}' -q `).action(async e=>{await M(e).catch(s=>{c.error(`${s.name}: ${s.message}`);}).finally(()=>{process.exit(0);});}),t.help(),t.version(S),t.parse(process.argv);};xt().catch(t=>{t instanceof Error?c.error(`${t.name}: ${t.message}`):c.log(t);});
